{
  "hash": "4012e8d064dd48c8ece88fae32958184",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"組織生成論\"\nauthor: \"Serika Yuzuki\"\ndate: \"2024-4-8\"\ncategories: [University, 2024]\nimage: \"images/thumbnail.png\"\nbibliography: ../../../bibliography.bib\n---\n\n$$\n\\require{physics}\n$$\n\n# ノート\n\n## 核生成\n\n液相中に古層の角が生成する時、自由エネルギー変化は次のように表される。\n\n$$\n\\Delta G = -V_s \\Delta G_v + A \\sigma_{SL}\n$$\n\nここで、$V_s$ は核の体積、$\\Delta G_v$ は核の体積の自由エネルギー、$A$ は核の表面積、$\\sigma_{SL}$ は核の界面エネルギーである。\n\n熱力学的駆動力は過冷却の温度差に比例する。\n\n$$\n\\Delta G = \\frac{\\Delta H_f\\Delta T}{T_m}\n$$\n\n$\\Delta T$ は過冷却温度差、 $T_m$ は融点、$\\Delta H_f$ は融解エンタルピーである。\n\nこれの導出には、次のようにする。 $\\Delta G$ とは個体と液体の自由エネルギー差である。\n\n$$\n\\begin{align*}\n\\Delta G &= \\Delta H_f - T\\Delta S\\\\\n0 &= \\Delta H_f - T_m\\Delta S\\\\\n\\Delta S &= \\frac{\\Delta H_f}{T_m} \\\\\n\\Delta G &= \\Delta H_f - T\\frac{\\Delta H_f}{T_m} \\\\\n&= \\frac{T_m - T}{T_m}\\Delta H_f\\\\\n&= \\frac{\\Delta T}{T_m}\\Delta H_f\n\\end{align*}\n$$\n\nここで、核生成の自由エネルギーを考えると、\n\n$$\n\\begin{aligned}\n\\Delta G &= -V_s \\Delta G_v + A \\sigma_{SL} \\\\\n&= -\\frac{4}{3}\\pi r^3 \\Delta G_v + 4\\pi r^2 \\sigma_{SL} \\\\\n\\end{aligned}\n$$\n\nここで、$r$ は核の半径である。$r^3$ を考えれば、一度核ができればどんどん大きくなった方が安定する。ここで、\n\n$$\n\\pdv{\\Delta G}{r} = 0\n$$\n\nとなるような $r$ を臨界半径と呼ぶ。これを解くと、\n\n$$\nr^* = \\frac{2\\pi \\sigma_{SL}}{\\Delta G_v}\n$$\n\nこれを代入すると、\n\n$$\n\\Delta G^* = \\frac{16\\pi \\sigma_{SL}^3}{3\\Delta G_v^2}\n$$\n\nこれにさらに\n\n$$\n\\Delta G_v = \\frac{\\Delta H_m \\Delta T}{T_m}\n$$\n\nを代入すると、\n\n$$\n\\Delta G^* = \\frac{16\\pi \\sigma_{SL}^3 T_m^2}{3\\Delta H_m^2 } \\frac{1}{\\Delta T^2}\n$$\n\nとなり、過冷却状態だと、臨界半径における自由エネルギーはその過冷却温度の二乗の逆数に比例する。\n\n以上の議論を別方向からもできて、界面生成に必要なエネルギーは次のように表される。\n\n$$\n\\begin{aligned}\nE_{Int} &= 4\\pi r^2 \\sigma_{SL} \\\\\n\\dv{E}{V} &= \\frac{2\\sigma_{SL}}{r}\\\\\n\\frac{\\Delta G}{\\Delta V} &= \\Delta G_v + \\frac{2\\sigma_{SL}}{r^*} = 0 \\\\\nr^* &= \\frac{2\\sigma_{SL}}{\\Delta G_v}\n\\end{aligned}\n$$\n\n\n## 表面エネルギー\n\n同一原子群に関しては、次のような式が成り立つ。\n\n$$\n\\sigma_{AV} = \\frac{Zm_1}{\\omega} \\frac{\\epsilon_{AA}}{2}\n$$\n\nここで、 $Z$ は配位数 $m_1$ は Broken bondの割合の数、 $\\omega$ は原子一個あたりの面積で、 $\\epsilon_{AA}$ は原子間の結合エネルギーである。\n\nまた、表面エネルギーは昇華熱に比例する。\n\n次に、別々の原子群に関しては、次のような式が成り立つ。\n\n$$\n\\sigma_{AB} = \\frac{Zm_1}{\\omega} \\left\\{ \\epsilon_{AB} - \\frac{\\epsilon_{AA}+\\epsilon_{BB}}{2} \\right\\}\n$$\n\n## 熱力学的駆動力 {#sec-thermo-driving-force}\n\n熱力学的駆動力は、液体→固体へ相変化が起こるときのモル体積あたりの自由エネルギー差である。\n\n$$\n\\Delta G_v = \\frac{\\Delta G_m}{V_m}\n$$\n\nここで、$\\Delta G_m$ が負であれば、固体化へ自発的に進むことになる。\n\nでは、融点付近での動きを見てみることにする。まず、融点においては、固体と液体が平衡にあるので、\n\n$$\n\\Delta G_v = 0\n$$\n\nこれが融点の定義でもある。なので、\n\n$$\n\\Delta S_{\\mathrm{fus}} = \\frac{\\Delta H_{\\mathrm{fus}}}{T_m}\n$$\n\nとなるのだが、これってのは融点付近の $\\Delta S$ 自体の近似値として使用可能。なので、\n\n$$\n\\Delta G_v = \\frac{\\Delta H_{\\mathrm{fus}}}{V_m} \\frac{T_m - T}{T_m} = \\frac{\\Delta H_{\\mathrm{fus}}}{V_m} \\frac{\\Delta T}{T_m}\n$$\n\nとなる。で、ここまでの議論でかなり重要な話だが、 $\\Delta H_{\\mathrm{fus}}$ の符号は基本的に負だ。そりゃあ凝固してるんだから。ただし！！　これが融解エンタルピー、つまり、凝固に伴うエンタルピー変化を逆から見て符号を変えたものの時は、マイナスをつけよう。\n\n講義資料では深く触れられていなかったため、まじで注意！！\n\n## 均質核生成 {#sec-homogeneous-nucleation}\n\n均質核生成は、核生成の熱力学的駆動力が負であることが必要である。\n\nTODO: ここに均質核生成の詳細な議論を書く。\n\n\n\n\n\n\n# 過去問\n\n<!-- \n::: {.callout-note collapse=\"true\"}\n##### 理論\n\nThis is an example of a callout with a title.\n:::\n\n::: {.callout-tip collapse=\"true\"}\n##### 解答\n\nThis is an example of a callout with a title.\n::: \n-->\n\n## 2024年度\n\n### 問1\n\n::: {#04b7bce9 .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# --- ヘルパー関数 ---\ndef bezier_curve(P, Q, offset_y, t):\n    \"\"\"2次ベジェ曲線を返す\"\"\"\n    mid = (P + Q) / 2\n    C = mid + np.array([0, offset_y])\n    return np.outer((1 - t)**2, P) + np.outer(2*(1 - t)*t, C) + np.outer(t**2, Q)\n\ndef line_interpolate(P, Q, x=None, y=None):\n    \"\"\"\n    直線上の補間\n    x 指定 → y,  y 指定 → x\n    \"\"\"\n    x0, y0 = P\n    x1, y1 = Q\n    if x is not None and y is None:\n        return y0 + (y1 - y0) / (x1 - x0) * (x - x0)\n    if y is not None and x is None:\n        return x0 + (x1 - x0) / (y1 - y0) * (y - y0)\n    raise ValueError(\"x か y のどちらか片方を指定\")\n\n# --- 主要点の設定 ---\nA       = np.array([  1,  300])\npoint0  = np.array([ 10,  800])\npoint1  = np.array([  0, 1180])\npoint2  = np.array([ 60,  800])\npoint3  = np.array([100, 1080])\npoint4  = np.array([ 90,  800])\nB       = np.array([ 98,  300])\n\n# ベジェ曲線の定義\nsegments = [\n    (A,      point0, 100),\n    (point0, point1, 100),\n    (point1, point2, 150),\n    (point2, point3, 100),\n    (point3, point4, 100),\n    (point4, B,      100),\n]\nt = np.linspace(0, 1, 300)\ncurves = [bezier_curve(P, Q, off, t) for P, Q, off in segments]\n\n# --- プロット ---\nfig, ax = plt.subplots(figsize=(8, 6))\nax.set_xlim(0, 100)\nax.set_ylim(300, 1300)\nax.set_xlabel('B (wt%)')\nax.set_ylabel('Temperature (°C)')\nax.set_title('Combined Phase Diagram')\n\n# ベジェ曲線描画\nfor curve in curves:\n    ax.plot(curve[:,0], curve[:,1], color='black', lw=2)\n\n# point0-point4 の直線\nax.plot([point0[0], point4[0]], [point0[1], point4[1]], \n        linestyle='-', color='black', lw=1)\n\n# 水平線 y=900\ny_h = 900\nax.axhline(y=y_h, linestyle='--', color='gray')\n\n# y=900 とベジェ曲線の交点\nfor curve in curves:\n    xs, ys = curve[:,0], curve[:,1]\n    idx = np.where((ys[:-1]-y_h)*(ys[1:]-y_h) <= 0)[0]\n    for i in idx:\n        x0, y0 = xs[i], ys[i]\n        x1, y1 = xs[i+1], ys[i+1]\n        x_cross = x0 + (y_h-y0)/(y1-y0)*(x1-x0)\n        ax.scatter(x_cross, y_h, color='red')\n        ax.annotate(f'({x_cross:.1f}, {y_h})', (x_cross, y_h),\n                    textcoords='offset points', xytext=(5,5))\n\n# 垂直線 x=20, 60\nx_lines = [20, 60]\nfor x_v in x_lines:\n    ax.axvline(x=x_v, linestyle='--', color='gray')\n    # 交点計算\n    for curve in curves:\n        xs, ys = curve[:,0], curve[:,1]\n        idx = np.where((xs[:-1]-x_v)*(xs[1:]-x_v) <= 0)[0]\n        for i in idx:\n            x0, y0 = xs[i], ys[i]\n            x1, y1 = xs[i+1], ys[i+1]\n            # 線形補間\n            y_cross = y0 + (y1-y0)/(x1-x0)*(x_v-x0)\n            ax.scatter(x_v, y_cross, color='blue')\n            ax.annotate(f'({x_v}, {y_cross:.1f})', (x_v, y_cross),\n                        textcoords='offset points', xytext=(5,-10))\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](組織生成論_files/figure-html/cell-2-output-1.png){}\n:::\n:::\n\n\n(1) A–20 wt % B 合金を 1200 °C で長時間保持し、その後十分ゆっくりと冷却した。  \n    1. 固相の晶出が始まる温度  \n    2. 液相が完全になくなる温度  \n    3. 最終的に得られる組織中の共晶組織の割合  \n\n(2) 60 wt % B 合金を 1200 °C で長時間保持し、その後ゆっくりと冷却した。 時間に対する温度変化を表すグラフを模式的に描け。\n\n(3) A–20 wt % B 合金と A–60 wt % B 合金の冷却過程におけるそれぞれの組織の模式図を、以下の各温度について描け。  \n    - 1000 °C  \n    - 800 °C 直上  \n    - 800 °C 直下  \n\n(4) 900 °C における L、α、β 各相の自由エネルギー曲線を、  \n    - 相平衡を表す共通接線と共に描け。  \n    - 相図中の組成 P、Q、R、S を自由エネルギー曲線図中に示せ。\n\n::: {.callout-note collapse=\"true\"}\n##### 理論\n\nここらの理論については、@newglass2014no113vol29 や解答で載せた資料を参考にすれば非常によく理解できるはず。というか、試験内容のうち、京商などに関連する内容はほぼ全てこれを読めばなんとかなるはず。\n\nあまりこういうことは言いたくないけど、完全上位互換な資料が山ほど世の中で転がっている中で、これらの活用をしないのは仕方なきにしても、あまつさえ自身の講義資料すら公開しないような講義の仕方をする講師の方たちというのはいかがなものかね。それに、非常に質の良い資料を商業化するためにクローズドソースにすることを選択するのは仕方なきにしても、いつかインターネットの肥やしになるくらいならば、いっそGitHubなどに公開して欲しいものだ。\n\n:::\n\n::: {.callout-tip collapse=\"true\"}\n##### 解答\n\n(1) 晶出は $1120 {}^\\circ\\text{C}$ で始まる。それからどんどん晶出が続いて $800 {}^\\circ\\text{C}$ で液相がなくなる。最終的に得られる共晶組織の割合は、$10/50 = 20\\%$ である。このうちの $\\alpha$ 相の割合は、$20\\% \\times 30 / 80 = 7.5\\%$ であり、$\\beta$ 相の割合は、$20\\% \\times 50 / 80 = 12.5\\%$ である。これについては、ギリギリまで液相だったものが共晶として析出して、その割合がテコの原理で 60% のところを見ることになる。\n\n(2) このダイアグラムを $\\LaTeX$ などで書くのは相当面倒なので、 @材料学入門 から引用した図を以下に示す。\n\n![冷却過程における温度変化](images/%E7%B5%84%E7%B9%94%E7%94%9F%E6%88%90%E8%AB%96/image1.png)\n\n(3) このダイアグラムを $\\LaTeX$ などで書くのは相当面倒なので、 @溶接学会no77vol6 から引用した図を以下に示す。\n\n![共晶組織の冷却過程](images/%E7%B5%84%E7%B9%94%E7%94%9F%E6%88%90%E8%AB%96/image0.png)\n\n(4) 四苦八苦して動かせるグラフをplotlyで書いてやろうかと思ってたのだが、すっごく綺麗な資料があったので、@PhaseDiagram を参考してほしい。\n\n![自由エネルギー曲線](images/%E7%B5%84%E7%B9%94%E7%94%9F%E6%88%90%E8%AB%96/image2.png)\n\n::: \n\n### 問2\n\nA. ある純金属の融解エンタルピー（$\\Delta H_{\\mathrm{ml}}$）は $10 \\mathrm{kJ \\cdot mol^{-1}}$、融点は $T_m = 1500 \\mathrm{K}$ である。また、モル体積は $V_m = 6 \\times 10^{-6} \\mathrm{m^3 \\cdot mol^{-1}}$ とする。\n\n1. この金属の融解エントロピー $\\Delta S_{\\mathrm{ml}}$ を求めよ。  \n2. この金属を完全に融解した後、融点より 100 K 低い温度（$T = T_m - 100 \\mathrm{K}$）に冷却・保持したとき、固体生成の熱力学的駆動力 $\\Delta G_{\\mathrm{v}}$ を求めよ。  \n3. この金属の固液界面エネルギーを $\\gamma = 0.18 \\mathrm{J \\cdot m^{-2}}$ とする。 2.の条件下で球状の固体核が液中に生成するときの臨界半径 $r^*$ を求めよ。  \n\nB. 多結晶固体中の核生成はしばしば粒界で起こる。この理由を約100字程度で説明せよ。\n\n::: {.callout-note collapse=\"true\"}\n##### 理論\n\n1. 等温、等圧過程なので、ギブスエネルギーを考えればいい。\n\n$$\n\\Delta G = \\Delta H - T\\Delta S\n$$\n\nTODO：いずれ熱力学ポテンシャルについての総合的な記事を書く。\n\n2. 熱力学的駆動力は、@sec-thermo-driving-force で述べたように、\n$$\n\\Delta G_v = \\frac{\\Delta H_{\\mathrm{fus}}}{V_m} \\frac{\\Delta T}{T_m}\n$$\nただし、注意として、 $\\Delta H_{\\mathrm{ml}} = - \\Delta H_{\\mathrm{fus}}$ である。\n\n3. 臨界半径などの話は @sec-homogeneous-nucleation を参照。\n$$\nr^* = \\frac{2\\sigma_{SL}}{\\Delta G_v}\n$$\nここで、$\\Delta G_v$ は熱力学的駆動力、$\\sigma_{SL}$ は核の界面エネルギーである。\n\n\n\n\n:::\n\n::: {.callout-tip collapse=\"true\"}\n##### 解答\nA.\n    1. 固体と液体が並行状態にあるので、\n$$\n\\begin{aligned}\n\\Delta G_{\\mathrm{ml}} &= \\Delta H_{\\mathrm{ml}} - T\\Delta S_{\\mathrm{ml}} = 0 \\\\\n\\Delta S_{\\mathrm{ml}} &= \\frac{\\Delta H_{\\mathrm{ml}}}{T_m} = \\frac{10 \\mathrm{kJ \\cdot mol^{-1}}}{1500 \\mathrm{K}} = 6.67 \\mathrm{kJ \\cdot mol^{-1} \\cdot K^{-1}}\n\\end{aligned}\n$$\n\n    2. \n$\\Delta T = -100 \\mathrm{K}$ なので、\n$$\n\\Delta G_v = - \\frac{10 \\mathrm{kJ \\cdot mol^{-1}}}{6 \\times 10^{-6} \\mathrm{m^3 \\cdot mol^{-1}}} \\frac{100 \\mathrm{K}}{1500 \\mathrm{K}} = -1.11 \\times 10^{5} \\mathrm{kJ \\cdot m^{-3}}\n$$\n\n::: {#84d6403e .cell execution_count=2}\n``` {.python .cell-code}\nimport numpy as np\n\n# 定数\nT_m = 1500 # K\nV_m = 6e-6 # m^3/mol\nH_ml = 10 # kJ/mol\n\n# 計算\nT = T_m - 100\nG_v = - H_ml / V_m * (T_m - T) / T_m\n\nprint(f\"熱力学的駆動力: {G_v:.2f} kJ/m^3\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n熱力学的駆動力: -111111.11 kJ/m^3\n```\n:::\n:::\n\n\n    3. 式は以下の通り。\n$$\nr^* = \\frac{2 \\times 0.18 \\mathrm{J \\cdot m^{-2}}}{-1.11 \\times 10^{5} \\mathrm{kJ \\cdot m^{-3}}} = 3.2 \\times 10^{-9} \\mathrm{m}\n$$\n\n::: {#e7013213 .cell execution_count=3}\n``` {.python .cell-code}\nimport numpy as np\n\n# 定数\nsigma_SL = 0.18 # J/m^2\nG_v = -1.11e8 # J/m^3\n\n# 計算\nr_star = 2 * sigma_SL / G_v\nprint(f\"臨界半径: {r_star:.2e} m\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n臨界半径: -3.24e-09 m\n```\n:::\n:::\n\n\nB. 粒界は格子歪みや欠陥が集中して界面エネルギーが高く、その結果、核生成に必要な自由エネルギー障壁が低下し、かつ原子拡散が促進されるため、多結晶中ではまず粒界で核生成が起こりやすい。  \n\n\n\n::: \n\n",
    "supporting": [
      "組織生成論_files"
    ],
    "filters": [],
    "includes": {}
  }
}