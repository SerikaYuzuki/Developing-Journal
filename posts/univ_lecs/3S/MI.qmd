---
title: "マテリアルインフォルマティクス"
author: "Serika Yuzuki"
date: "2024-4-9"
categories: [University, 2024]
image: "images/thumbnail.png"
---

# ノート

## 第一講

出席さえすれば大丈夫だ！　出席し続けろよ、俺！

```{python}
import random
a = random.random()

print(a)

if a > 0.6:
    print("higher")
else:
    print("lower or equal")
```

```{python}
import random

cnt = 0

for i in range(1000000):
    r1 = random.random()
    r2 = random.random()
    if r1**2 + 4*r2**2 <= 1:
        cnt += 1

result = 4 * cnt / 1000000
print(result)

#with open("240712_1-2.txt", "w") as file:
#    file.write(f"Result: {result}\n")
```

## 第二講

```{python}
import numpy as np
import matplotlib.pyplot as plt

x = np.linspace(-4, 4, 300)

y1 = x**4 - x**3 - 7.39*x**2 + 5.08*x + 4.2
y2 = 0*x

plt.plot(x, y1, label='$y = x^4 - x^3 - 7.39x^2 + 5.08x + 4.2$')
plt.plot(x, y2, label='$y = 0$')

plt.xlabel('$x$')
plt.ylabel('$y$')
plt.title('Homework 2')
plt.legend()

plt.show()
```

```{python}
import numpy as np

def f(x):
    return x**4 - x**3 - 7.39*x**2 + 5.08*x + 4.2

def df(x):
    return 4*x**3 - 3*x**2 - 14.78*x + 5.08

def newton_method(x0, f, df, tol=0.001, max_iter=100):
    x = x0
    for _ in range(max_iter):
        x_new = x - f(x) / df(x)
        if abs(x_new - x) < tol:
            return x_new
        x = x_new
    return x

xs = [1.0, -0.5, -2.5, 3.0]
root = []
for x0 in xs:
    root.append(newton_method(x0, f, df))

print(root)
```

```{python}
import numpy as np
from scipy.integrate import odeint
import matplotlib.pyplot as plt

p = 7
r = 18
b = 2

def lorenz(X, t, p, r, b):
    x, y, z = X
    dx_dt = p*(-x + y)
    dy_dt = -x*z + r*x -y
    dz_dt = x*y - b*z
    return [dx_dt, dy_dt, dz_dt]

X0 = [1, 3, 3.5]

t = np.linspace(0, 40, 40000)

X = odeint(lorenz, X0, t, args=(p, r, b))

plt.plot(t, X[:, 0], label='x')
plt.plot(t, X[:, 1], label='y')
plt.xlabel('$t$')
plt.ylabel('$x,\;y$')
plt.legend()

plt.show()
```
