[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Serika Yuzuki",
    "section": "",
    "text": "柚木芹香です。よろしくお願いします。\n\n\n東京大学 | 工学部マテリアル工学科 | 10月 2023 - 現在\nUniversity of Tokyo | Department of Materials Engineering | Oct 2023 - present\n\n\n\n塾講師 | 2016年 - 2021年\n家庭教師 | 2017年 - 2021年\n\n\n\n\n小学生から高校生までの教育指導\nLaTeXなどを使用した教材作成\nプログラミング言語の基礎知識\n小さなゲームなどの開発\n\n\n\n\n\nゲーム\n\n軌跡シリーズ\n\nいつかこれをリスペクトしたゲームを世界に出したい！！！\n\nValorant\n\nDiamond 1まではやりました\n\nMental Omega\n\nModを制作しているのですが、いかんせん人口が少なくて、自分で楽しんでいるだけです\n\n\nプログラミング\n\nRust信者\n\nできれば全てのプロジェクトにRustを使いたい\nAtCoderではRustを使っています\n\nUnreal Engine\n\nライトノベル(読む方だけではなく、書くほうも)\nジャンカー\n\nPCだけじゃなく、色々\n\nテレビ番組\n\n水曜日のダウンタウン\n全力!脱力タイムズ\nくりぃむナンタラ\n太田上田\n以上。それ以外はほぼ興味なし。\n\n\n\n\n\n就活の自己PRとかに流用する予定の場所でもあります。\n\n\nとりあえずこれを見れば大体わかる気がします。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nENTPの人間です。と言っても他人の気分を損なうような議論が好きな人ではないです。\n代わりに、自分の考えを言い切ることが好きです。そのため、自分の考えを言い切ることができる環境を好みます。また、否定されるであろう前提で意見を表明し、その否定される過程で何か見つけられないかと探すことが多いので、私の意見＝私の考えではありません。\n\n\n\n重度のADHDのため、一度の退学を経験しています。正直、ある程度の自由度が与えられている割には、定期的な出席を自発的に達成しないといけないという大学の環境は、自分に合っていないと感じることが多いですが、それでもなんとか頑張っています。\n代わりに、というのかはわかりませんが、短い間での集中力は無かりのものがあり、任意の事柄に対する理解速度は他人と比肩ならないものがあると信じています。おかげで２度の東京大学の合格や、数学オリンピック、物理オリンピックの参加などを経験しています。オリンピックについてはメダル獲得には至りませんでしたが、それなりの点数を取ることはできました。\nまた、広く色々な事柄について興味を持つことにも長けています。事実、軽いweb開発やLaTex、簡単な深層学習など、色々と手を出しています。広く浅い知識を運用することによって、作業中の特定の事項や問題において、突破点となる第３の選択肢を見つけることができると信じています。\n\n\n\n人生でゲーム開発に関わる作業をしたのは、BF1942という2002年発売のゲームのModを制作したことでした。\n\n\n\n\n\nBF1942のパッケージ\n\n\nゲーム自体の開発ではな買ったのですが、自分が提案した遊び方を友人と共有し、喜んでもらえることが、ゲーム開発業界に関わりたいと思い始めたきっかけでした。とは言っても、iniファイルをちょっと弄って、武器の威力を変えたり、弾薬の数を変えたりするだけのものでしたが、それでも普段とは違う楽しみを見つけて友人と共有できたことは、今でも忘れられません。\n今現在、個人でUE5を勉強していますが、UEの膨大な機能のために自分がどのように勉強を進めるべきかをゆっくり見つけながら進めています。今現在はUdemyでの講座を進めながら、裏でUEのドキュメントを読み進めています。"
  },
  {
    "objectID": "about.html#私の取扱説明書",
    "href": "about.html#私の取扱説明書",
    "title": "Serika Yuzuki",
    "section": "",
    "text": "就活の自己PRとかに流用する予定の場所でもあります。\n\n\nとりあえずこれを見れば大体わかる気がします。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nENTPの人間です。と言っても他人の気分を損なうような議論が好きな人ではないです。\n代わりに、自分の考えを言い切ることが好きです。そのため、自分の考えを言い切ることができる環境を好みます。また、否定されるであろう前提で意見を表明し、その否定される過程で何か見つけられないかと探すことが多いので、私の意見＝私の考えではありません。\n\n\n\n重度のADHDのため、一度の退学を経験しています。正直、ある程度の自由度が与えられている割には、定期的な出席を自発的に達成しないといけないという大学の環境は、自分に合っていないと感じることが多いですが、それでもなんとか頑張っています。\n代わりに、というのかはわかりませんが、短い間での集中力は無かりのものがあり、任意の事柄に対する理解速度は他人と比肩ならないものがあると信じています。おかげで２度の東京大学の合格や、数学オリンピック、物理オリンピックの参加などを経験しています。オリンピックについてはメダル獲得には至りませんでしたが、それなりの点数を取ることはできました。\nまた、広く色々な事柄について興味を持つことにも長けています。事実、軽いweb開発やLaTex、簡単な深層学習など、色々と手を出しています。広く浅い知識を運用することによって、作業中の特定の事項や問題において、突破点となる第３の選択肢を見つけることができると信じています。\n\n\n\n人生でゲーム開発に関わる作業をしたのは、BF1942という2002年発売のゲームのModを制作したことでした。\n\n\n\n\n\nBF1942のパッケージ\n\n\nゲーム自体の開発ではな買ったのですが、自分が提案した遊び方を友人と共有し、喜んでもらえることが、ゲーム開発業界に関わりたいと思い始めたきっかけでした。とは言っても、iniファイルをちょっと弄って、武器の威力を変えたり、弾薬の数を変えたりするだけのものでしたが、それでも普段とは違う楽しみを見つけて友人と共有できたことは、今でも忘れられません。\n今現在、個人でUE5を勉強していますが、UEの膨大な機能のために自分がどのように勉強を進めるべきかをゆっくり見つけながら進めています。今現在はUdemyでの講座を進めながら、裏でUEのドキュメントを読み進めています。"
  },
  {
    "objectID": "posts/ue5_aura_courses/template.html#発見",
    "href": "posts/ue5_aura_courses/template.html#発見",
    "title": "template",
    "section": "発見",
    "text": "発見\n\n問題"
  },
  {
    "objectID": "posts/ue5_aura_courses/template.html#問題点",
    "href": "posts/ue5_aura_courses/template.html#問題点",
    "title": "template",
    "section": "問題点",
    "text": "問題点"
  },
  {
    "objectID": "posts/at_coder/typical90-01.html",
    "href": "posts/at_coder/typical90-01.html",
    "title": "typical90-01",
    "section": "",
    "text": "Learnt Binary Search."
  },
  {
    "objectID": "posts/at_coder/typical90-01.html#概要",
    "href": "posts/at_coder/typical90-01.html#概要",
    "title": "typical90-01",
    "section": "",
    "text": "Learnt Binary Search."
  },
  {
    "objectID": "posts/at_coder/typical90-01.html#発見",
    "href": "posts/at_coder/typical90-01.html#発見",
    "title": "typical90-01",
    "section": "発見",
    "text": "発見\n\nBinary Search\nSearching 0..n is O(n) but searching by binary is O(log n). This makes very big difference."
  },
  {
    "objectID": "posts/at_coder/typical90-01.html#問題点",
    "href": "posts/at_coder/typical90-01.html#問題点",
    "title": "typical90-01",
    "section": "問題点",
    "text": "問題点"
  },
  {
    "objectID": "posts/at_coder/template.html#発見",
    "href": "posts/at_coder/template.html#発見",
    "title": "template",
    "section": "発見",
    "text": "発見\n\n問題"
  },
  {
    "objectID": "posts/at_coder/template.html#問題点",
    "href": "posts/at_coder/template.html#問題点",
    "title": "template",
    "section": "問題点",
    "text": "問題点"
  },
  {
    "objectID": "posts/journal/2023-10-09.html",
    "href": "posts/journal/2023-10-09.html",
    "title": "2023-10-09",
    "section": "",
    "text": "リマインダーの確認\nジムに行く\n掃除をする\nゲームの進捗を産む\nAtCoderを進める\n\n\n\n\n\nUEドキュメントを読み進める\nECサイトの作成を進める"
  },
  {
    "objectID": "posts/journal/2023-10-09.html#今日の予定の完成度",
    "href": "posts/journal/2023-10-09.html#今日の予定の完成度",
    "title": "2023-10-09",
    "section": "",
    "text": "リマインダーの確認\nジムに行く\n掃除をする\nゲームの進捗を産む\nAtCoderを進める\n\n\n\n\n\nUEドキュメントを読み進める\nECサイトの作成を進める"
  },
  {
    "objectID": "posts/journal/2023-10-09.html#日記",
    "href": "posts/journal/2023-10-09.html#日記",
    "title": "2023-10-09",
    "section": "日記",
    "text": "日記\n\nダイエット記録\n\n食べたもの\n\n\nジムでの消費カロリー\n\n\n体重\n\n\n\nその他"
  },
  {
    "objectID": "posts/journal/2023-10-11.html",
    "href": "posts/journal/2023-10-11.html",
    "title": "2023-10-11",
    "section": "",
    "text": "リマインダーの確認\nジムに行く\n掃除をする\nゲームの進捗を産む\n\n記事の更新もした\n\nAtCoderを進める\n\n\n\n\n\nUEドキュメントを読み進める\nECサイトの作成を進める"
  },
  {
    "objectID": "posts/journal/2023-10-11.html#今日の予定の完成度",
    "href": "posts/journal/2023-10-11.html#今日の予定の完成度",
    "title": "2023-10-11",
    "section": "",
    "text": "リマインダーの確認\nジムに行く\n掃除をする\nゲームの進捗を産む\n\n記事の更新もした\n\nAtCoderを進める\n\n\n\n\n\nUEドキュメントを読み進める\nECサイトの作成を進める"
  },
  {
    "objectID": "posts/journal/2023-10-11.html#日記",
    "href": "posts/journal/2023-10-11.html#日記",
    "title": "2023-10-11",
    "section": "日記",
    "text": "日記\n特に書くこともないし眠いので寝る。\n昼間はやたらと暑くてしんどかった。明日も暑かったら流石にエアコンをつけようかな。\n\nダイエット記録\n\n食べたもの\n\n\nジムでの消費カロリー\n500kcal\n\n\n体重\n\n\n\nその他"
  },
  {
    "objectID": "posts/journal/2023-10-12.html",
    "href": "posts/journal/2023-10-12.html",
    "title": "2023-10-12",
    "section": "",
    "text": "朝、目覚ましが鳴らなかった"
  },
  {
    "objectID": "posts/journal/2023-10-12.html#今日の予定の完成度",
    "href": "posts/journal/2023-10-12.html#今日の予定の完成度",
    "title": "2023-10-12",
    "section": "今日の予定の完成度",
    "text": "今日の予定の完成度\n\n最重要課題\n\nリマインダーの確認\nジムに行く\n掃除をする\nゲームの進捗を産む\n[x023-] AtCoderを進める\n\n\n\n課題\n\nUEドキュメントを読み進める\nECサイトの作成を進める"
  },
  {
    "objectID": "posts/journal/2023-10-12.html#日記",
    "href": "posts/journal/2023-10-12.html#日記",
    "title": "2023-10-12",
    "section": "日記",
    "text": "日記\nHelixなるものを使用し始めようと思う。思ったがやめた。結局あれじゃん。NeoVim使えばいいじゃん。\n収容所のページ何をするかまだ決まらず。\nあまり実りのない１日だった。明日はしっかり時間管理をしよう。\n明日からお絵描きをルーティンに入れようかな。\n\nダイエット記録\n\n食べたもの\n\n\nジムでの消費カロリー\n\n\n体重\n\n\n\nその他"
  },
  {
    "objectID": "posts/univ_lecs/材料相平衡論.html",
    "href": "posts/univ_lecs/材料相平衡論.html",
    "title": "材料相平衡論",
    "section": "",
    "text": "過去問の解答があるので概ね問題ないと思われますが、2021年の(5)の3に問題の誤りがあり、そのことについて図示しました。\n\n\n\n\n Back to top"
  },
  {
    "objectID": "posts/univ_lecs/材料速度論.html",
    "href": "posts/univ_lecs/材料速度論.html",
    "title": "材料速度論",
    "section": "",
    "text": "軽いまとめと問題の過去問を手書きで解いてます。\nTeXにまとめるのは面倒でした。\n\n\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "posts/univ_lecs/材料量子力学.html",
    "href": "posts/univ_lecs/材料量子力学.html",
    "title": "材料量子力学",
    "section": "",
    "text": "過去問を解いていく。手書きです。"
  },
  {
    "objectID": "posts/univ_lecs/材料量子力学.html#section",
    "href": "posts/univ_lecs/材料量子力学.html#section",
    "title": "材料量子力学",
    "section": "2021",
    "text": "2021"
  },
  {
    "objectID": "posts/univ_lecs/材料量子力学.html#section-1",
    "href": "posts/univ_lecs/材料量子力学.html#section-1",
    "title": "材料量子力学",
    "section": "2019",
    "text": "2019"
  },
  {
    "objectID": "posts/univ_lecs/材料量子力学.html#section-2",
    "href": "posts/univ_lecs/材料量子力学.html#section-2",
    "title": "材料量子力学",
    "section": "2015",
    "text": "2015"
  },
  {
    "objectID": "posts/univ_lecs/材料量子力学.html#section-3",
    "href": "posts/univ_lecs/材料量子力学.html#section-3",
    "title": "材料量子力学",
    "section": "2009",
    "text": "2009"
  },
  {
    "objectID": "posts/univ_lecs/材料力学.html",
    "href": "posts/univ_lecs/材料力学.html",
    "title": "統計力学",
    "section": "",
    "text": "作ったらみんなが喜ぶと聞いて．\n\\[\\require{physics}\\]\n\n\n\nレオロジーとは、(変形と流動) の学問であり、(ソフトマター)と呼ばれる固体と液体の中間的な性質をもつ材料を対象とする。\n固体の示す性質を(弾性)、液体の示す性質を(粘性)と呼ぶ。その二つをわけるのは、簡単には(かたち)を忘れるかどうかである。\nエネルギーの観点からは、固体は変形によるエネルギーを(貯蔵)する一方で液体はエネルギーを(散逸)する。\nスライムやゲルは、(時間)によって固体と液体の中間的な性質を示す(粘弾性)体である。\nマヨネーズや歯磨き粉は、(加える変形量)によって固体と液体の中間的な性質を示す(塑性)体である。\nレオロジー特性を利用した様々な材料が、わたしたちの身の周りに存在する (例:化粧品、防振ゴム、、、、)。\n\n\n\n\n\n材料の力学を扱う上で、力と変形の関係は試料形状によらない必要がある。このため、規格化した力、変形量として(応力)と(ひずみ)が用いられる。\n一軸伸張変形を特徴づけるパラメータとして(ヤング)率が、ずり変形を特徴づけるパラメータとして(剛性)率がある。これらは、変形前後の体 積変化を示す(ポアソン比)で結び付けられており、等体積変形下におい て(3)倍の関係にある。\nより一般的な表記として、(テンソル)を用いることができる。対称性を考えるとこのテンソルには、(6)個の独立変数が存在する。\n純粋な変形の効果を考えるため、(フィンガーテンソル)が使われる。さらに、座標系によらない変数として、(不変量)が用いられる。\n\n\n\n\n\n材料の粘弾性は、(レオメータ)という装置を用いて、種々の変形を加えることで評価できる。\n粘弾性評価方法としては、一定ひずみを加え応力の時間変化を観察する(クリープ)、正弦ひずみを加える(動的粘弾性)がある。\nそれぞれについて、(緩和弾性率)、(クリープコンプライアンス)、(貯蔵・損失弾性率)を用いることで、粘弾性の定量的な議論ができる。 線形粘弾性の範囲において、これらの関数は等価な情報を有する。\n任意の変形履歴を受けた場合、ある時間における応力 (ひずみ) は過去の時刻における微小時間内に誘起した応力(ひずみ)の総和として記述できることを(Boltzmannの重畳原理)と呼び、この加成性が成り立つ範囲 を線形粘弾性と呼ぶ。\n実際の成形加工、実用上は(非線形)粘弾性が重要となる場面もある。\n\n\n\n\n\n高分子は、分子が(共有結合)によって連結したひも状の物質である。\n高分子は、ポリエチレンのような(結晶)性高分子とポリスチレンのような(非晶)性高分子に大別できる。(非晶)性高分子には、分子運動性の違 いによって、(ガラス)状態と(ゴム)状態が存在する。(ゴム)状態の高分子が示すソフトな弾性を(ゴム)弾性と呼ぶ。\n(ゴム)弾性の特徴は、\n\n金属と比べ(小さい力で大きく変形)する\n温度を上げると弾性率が(増加)する\n急激に伸長すると(暖まり)、急激に圧縮すると(冷える) - 応力ー延伸比曲線が(S)字型\n\n熱力学的な解析から、ゴム弾性は、金属の示す(エネルギー)弾性と異なり、 (エントロピー)の寄与が支配的であることがわかる。\n\n\n\n\n\nゴム弾性は、(エントロピー)由来の寄与が支配的である。\n高分子一本鎖の弾性は、(ガウス)統計を用いることで、定量的に議論することが可能である。\n網目を単純化した(自由連結鎖)モデルを用いることで、ゴムの非線形挙動をある程度、記述可能である。\nゴム弾性の式に基づくと、弾性率は(部分鎖密度)に比例することがわかる。\n架橋点数や(部分鎖)密度は、パーコレーションモデルなどで見積もることができ、(\\(G = 2pCk_BT\\))のように予測される。\n高分子絡み合い溶液の場合、弾性率は(濃度)のみで規定される。\n\n\n\n\n\n高分子の粘弾性緩和は、(分子ダイナミックス)を反映する。\n非絡み合い系の粘弾性緩和は分子量に対して(2)乗の関係を示す。( バネ・ビーズ ) モデルを用いることで、粘弾性緩和挙動を予測可能である。Boltzmannの重畳原理より粘度の分子量依存性は(高分子のからみあい ) と予測される。\n絡み合った高分子の粘弾性緩和は、濃度・分子量に対して( ) の関係を示す。絡んだ周囲の鎖の影響で、分子は一方向に拡散する( 熱 )運動によって緩和が起こる。(管 )モデルを用いる ことで、絡み合い高分子の粘弾性は記述可能である。\n分岐が入ると( レプテーション運動（一次元運動） )が抑制され、( 鎖の収縮運動 )によってのみ緩和が 進行するため、ダイナミクスが遅延する。\n高度に分岐すると、系全体が固体として振る舞うゲルになる。 ゾルとゲルの境目では、( 緩和時間が発散)の関係が見られ、( Winter -Chambon )則と呼ばれる。"
  },
  {
    "objectID": "posts/univ_lecs/材料力学.html#section",
    "href": "posts/univ_lecs/材料力学.html#section",
    "title": "統計力学",
    "section": "",
    "text": "レオロジーとは、(変形と流動) の学問であり、(ソフトマター)と呼ばれる固体と液体の中間的な性質をもつ材料を対象とする。\n固体の示す性質を(弾性)、液体の示す性質を(粘性)と呼ぶ。その二つをわけるのは、簡単には(かたち)を忘れるかどうかである。\nエネルギーの観点からは、固体は変形によるエネルギーを(貯蔵)する一方で液体はエネルギーを(散逸)する。\nスライムやゲルは、(時間)によって固体と液体の中間的な性質を示す(粘弾性)体である。\nマヨネーズや歯磨き粉は、(加える変形量)によって固体と液体の中間的な性質を示す(塑性)体である。\nレオロジー特性を利用した様々な材料が、わたしたちの身の周りに存在する (例:化粧品、防振ゴム、、、、)。"
  },
  {
    "objectID": "posts/univ_lecs/材料力学.html#section-1",
    "href": "posts/univ_lecs/材料力学.html#section-1",
    "title": "統計力学",
    "section": "",
    "text": "材料の力学を扱う上で、力と変形の関係は試料形状によらない必要がある。このため、規格化した力、変形量として(応力)と(ひずみ)が用いられる。\n一軸伸張変形を特徴づけるパラメータとして(ヤング)率が、ずり変形を特徴づけるパラメータとして(剛性)率がある。これらは、変形前後の体 積変化を示す(ポアソン比)で結び付けられており、等体積変形下におい て(3)倍の関係にある。\nより一般的な表記として、(テンソル)を用いることができる。対称性を考えるとこのテンソルには、(6)個の独立変数が存在する。\n純粋な変形の効果を考えるため、(フィンガーテンソル)が使われる。さらに、座標系によらない変数として、(不変量)が用いられる。"
  },
  {
    "objectID": "posts/univ_lecs/材料力学.html#section-2",
    "href": "posts/univ_lecs/材料力学.html#section-2",
    "title": "統計力学",
    "section": "",
    "text": "材料の粘弾性は、(レオメータ)という装置を用いて、種々の変形を加えることで評価できる。\n粘弾性評価方法としては、一定ひずみを加え応力の時間変化を観察する(クリープ)、正弦ひずみを加える(動的粘弾性)がある。\nそれぞれについて、(緩和弾性率)、(クリープコンプライアンス)、(貯蔵・損失弾性率)を用いることで、粘弾性の定量的な議論ができる。 線形粘弾性の範囲において、これらの関数は等価な情報を有する。\n任意の変形履歴を受けた場合、ある時間における応力 (ひずみ) は過去の時刻における微小時間内に誘起した応力(ひずみ)の総和として記述できることを(Boltzmannの重畳原理)と呼び、この加成性が成り立つ範囲 を線形粘弾性と呼ぶ。\n実際の成形加工、実用上は(非線形)粘弾性が重要となる場面もある。"
  },
  {
    "objectID": "posts/univ_lecs/材料力学.html#section-3",
    "href": "posts/univ_lecs/材料力学.html#section-3",
    "title": "統計力学",
    "section": "",
    "text": "高分子は、分子が(共有結合)によって連結したひも状の物質である。\n高分子は、ポリエチレンのような(結晶)性高分子とポリスチレンのような(非晶)性高分子に大別できる。(非晶)性高分子には、分子運動性の違 いによって、(ガラス)状態と(ゴム)状態が存在する。(ゴム)状態の高分子が示すソフトな弾性を(ゴム)弾性と呼ぶ。\n(ゴム)弾性の特徴は、\n\n金属と比べ(小さい力で大きく変形)する\n温度を上げると弾性率が(増加)する\n急激に伸長すると(暖まり)、急激に圧縮すると(冷える) - 応力ー延伸比曲線が(S)字型\n\n熱力学的な解析から、ゴム弾性は、金属の示す(エネルギー)弾性と異なり、 (エントロピー)の寄与が支配的であることがわかる。"
  },
  {
    "objectID": "posts/univ_lecs/材料力学.html#section-4",
    "href": "posts/univ_lecs/材料力学.html#section-4",
    "title": "統計力学",
    "section": "",
    "text": "ゴム弾性は、(エントロピー)由来の寄与が支配的である。\n高分子一本鎖の弾性は、(ガウス)統計を用いることで、定量的に議論することが可能である。\n網目を単純化した(自由連結鎖)モデルを用いることで、ゴムの非線形挙動をある程度、記述可能である。\nゴム弾性の式に基づくと、弾性率は(部分鎖密度)に比例することがわかる。\n架橋点数や(部分鎖)密度は、パーコレーションモデルなどで見積もることができ、(\\(G = 2pCk_BT\\))のように予測される。\n高分子絡み合い溶液の場合、弾性率は(濃度)のみで規定される。"
  },
  {
    "objectID": "posts/univ_lecs/材料力学.html#section-5",
    "href": "posts/univ_lecs/材料力学.html#section-5",
    "title": "統計力学",
    "section": "",
    "text": "高分子の粘弾性緩和は、(分子ダイナミックス)を反映する。\n非絡み合い系の粘弾性緩和は分子量に対して(2)乗の関係を示す。( バネ・ビーズ ) モデルを用いることで、粘弾性緩和挙動を予測可能である。Boltzmannの重畳原理より粘度の分子量依存性は(高分子のからみあい ) と予測される。\n絡み合った高分子の粘弾性緩和は、濃度・分子量に対して( ) の関係を示す。絡んだ周囲の鎖の影響で、分子は一方向に拡散する( 熱 )運動によって緩和が起こる。(管 )モデルを用いる ことで、絡み合い高分子の粘弾性は記述可能である。\n分岐が入ると( レプテーション運動（一次元運動） )が抑制され、( 鎖の収縮運動 )によってのみ緩和が 進行するため、ダイナミクスが遅延する。\n高度に分岐すると、系全体が固体として振る舞うゲルになる。 ゾルとゲルの境目では、( 緩和時間が発散)の関係が見られ、( Winter -Chambon )則と呼ばれる。"
  },
  {
    "objectID": "posts/journal/2023-10-10.html",
    "href": "posts/journal/2023-10-10.html",
    "title": "2023-10-10",
    "section": "",
    "text": "リマインダーの確認\nジムに行く\n掃除をする\nゲームの進捗を産む\nAtCoderを進める\n\n\n\n\n\nUEドキュメントを読み進める\nECサイトの作成を進める"
  },
  {
    "objectID": "posts/journal/2023-10-10.html#今日の予定の完成度",
    "href": "posts/journal/2023-10-10.html#今日の予定の完成度",
    "title": "2023-10-10",
    "section": "",
    "text": "リマインダーの確認\nジムに行く\n掃除をする\nゲームの進捗を産む\nAtCoderを進める\n\n\n\n\n\nUEドキュメントを読み進める\nECサイトの作成を進める"
  },
  {
    "objectID": "posts/journal/2023-10-10.html#日記",
    "href": "posts/journal/2023-10-10.html#日記",
    "title": "2023-10-10",
    "section": "日記",
    "text": "日記\nやっぱ飯を食うと眠くなってしまう。\n生活リズムを崩さないように気をつけていかないと……。\n1日2食くらいがいいのかね？\n話は変わるが、RustをVSCodeで書くように変えようかと思ったが、ダメだ。重たすぎる。その理由はどこから来ているのかは知らないが、おそらくマルチスレッディングに対応しているかどうかによるものだろうか。Zedの方がよほど速いので、そちらを使うことにした。\nJournalはVSCodeで書きながら、ZedでAtcoderをして、RiderでUEを書くという感じになるのかな。めんどくさい。Riderはまあ仕方ないとしても、ZedにQuartoのExtensionを移植できないかなぁ。\n\nダイエット記録\n\n食べたもの\nスーパーで買った広島風お好み焼き風何か\n鍋用野菜＋春雨の鍋\n\n\nジムでの消費カロリー\n0 kcal\n\n\n体重\n\n\n\nその他"
  },
  {
    "objectID": "posts/journal/template.html",
    "href": "posts/journal/template.html",
    "title": "template",
    "section": "",
    "text": "リマインダーの確認\nジムに行く\n掃除をする\nゲームの進捗を産む\nAtCoderを進める\nお絵描きをする\n\n\n\n\n\nUEドキュメントを読み進める\nECサイトの作成を進める"
  },
  {
    "objectID": "posts/journal/template.html#今日の予定の完成度",
    "href": "posts/journal/template.html#今日の予定の完成度",
    "title": "template",
    "section": "",
    "text": "リマインダーの確認\nジムに行く\n掃除をする\nゲームの進捗を産む\nAtCoderを進める\nお絵描きをする\n\n\n\n\n\nUEドキュメントを読み進める\nECサイトの作成を進める"
  },
  {
    "objectID": "posts/journal/template.html#日記",
    "href": "posts/journal/template.html#日記",
    "title": "template",
    "section": "日記",
    "text": "日記\n\nダイエット記録\n\n食べたもの\n\n\nジムでの消費カロリー\n\n\n体重\n\n\n\nその他"
  },
  {
    "objectID": "posts/at_coder/cargo_compete.html",
    "href": "posts/at_coder/cargo_compete.html",
    "title": "Cargo Compete",
    "section": "",
    "text": "cargo install cargo-compete\ncargo compete init atcoder\ncargo compete new typical90\n\n\n\n```bash cd typical90 cargo compete test 001 cargo compete submit 001 –no-watch"
  },
  {
    "objectID": "posts/at_coder/cargo_compete.html#プロジェクトの設定の仕方",
    "href": "posts/at_coder/cargo_compete.html#プロジェクトの設定の仕方",
    "title": "Cargo Compete",
    "section": "",
    "text": "cargo install cargo-compete\ncargo compete init atcoder\ncargo compete new typical90\n\n\n\n```bash cd typical90 cargo compete test 001 cargo compete submit 001 –no-watch"
  },
  {
    "objectID": "posts/at_coder/typical90-02.html",
    "href": "posts/at_coder/typical90-02.html",
    "title": "typical90-02",
    "section": "",
    "text": "問題リンク\n(())などをランダムウォークのように考えると、常に＋の部分にいて、最終的には必ず0に戻ってくることがわかる。\n効率のいい回答だったのは、回帰関数で解いているところ。\nuse proconio::input;\n\nfn main() {\n    input! {\n        n : i32,\n    }\n\n    if n % 2 == 1 {\n        return;\n    }\n\n    let mut cs = Vec::new();\n    let mut answer = Vec::new();\n    let mut left = n / 2;\n    let mut right = n / 2;\n\n    recursive(&mut cs, &mut left, &mut right, &mut answer);\n\n    for i in 0..answer.len() {\n        println!(\"{}\", answer[i]);\n    }\n}\n\nfn recursive(cs: &mut Vec&lt;char&gt;, left: &mut i32, right: &mut i32, answer: &mut Vec&lt;String&gt;) {\n    if *left == 0 && *right == 0 {\n        answer.push(cs.iter().collect());\n        return;\n    }\n\n    if *left &gt; 0 {\n        *left -= 1;\n        cs.push('(');\n        recursive(cs, left, right, answer);\n        cs.pop();\n        *left += 1;\n    }\n\n    if *right &gt; 0 && *left &lt; *right {\n        *right -= 1;\n        cs.push(')');\n        recursive(cs, left, right, answer);\n        cs.pop();\n        *right += 1;\n    }\n}\n発想としては、00001111,00010111,…のような二進数を作っていくことを考えていくところ。で、0の数を超えないように1をappendしていくわけだ。辞書式に並べていくわけだから、最初に0を入れて、後で1を入れれば、自ずと辞書式に並べられる。"
  },
  {
    "objectID": "posts/at_coder/typical90-02.html#概要",
    "href": "posts/at_coder/typical90-02.html#概要",
    "title": "typical90-02",
    "section": "",
    "text": "問題リンク\n(())などをランダムウォークのように考えると、常に＋の部分にいて、最終的には必ず0に戻ってくることがわかる。\n効率のいい回答だったのは、回帰関数で解いているところ。\nuse proconio::input;\n\nfn main() {\n    input! {\n        n : i32,\n    }\n\n    if n % 2 == 1 {\n        return;\n    }\n\n    let mut cs = Vec::new();\n    let mut answer = Vec::new();\n    let mut left = n / 2;\n    let mut right = n / 2;\n\n    recursive(&mut cs, &mut left, &mut right, &mut answer);\n\n    for i in 0..answer.len() {\n        println!(\"{}\", answer[i]);\n    }\n}\n\nfn recursive(cs: &mut Vec&lt;char&gt;, left: &mut i32, right: &mut i32, answer: &mut Vec&lt;String&gt;) {\n    if *left == 0 && *right == 0 {\n        answer.push(cs.iter().collect());\n        return;\n    }\n\n    if *left &gt; 0 {\n        *left -= 1;\n        cs.push('(');\n        recursive(cs, left, right, answer);\n        cs.pop();\n        *left += 1;\n    }\n\n    if *right &gt; 0 && *left &lt; *right {\n        *right -= 1;\n        cs.push(')');\n        recursive(cs, left, right, answer);\n        cs.pop();\n        *right += 1;\n    }\n}\n発想としては、00001111,00010111,…のような二進数を作っていくことを考えていくところ。で、0の数を超えないように1をappendしていくわけだ。辞書式に並べていくわけだから、最初に0を入れて、後で1を入れれば、自ずと辞書式に並べられる。"
  },
  {
    "objectID": "posts/at_coder/typical90-02.html#発見",
    "href": "posts/at_coder/typical90-02.html#発見",
    "title": "typical90-02",
    "section": "発見",
    "text": "発見\n\nString Str Vecの相互変換\n\nstr と String の違い\n\nstr is a “String” slice.\n\nSlice is a pointer to a block of memory.\nSlice is immutable.\nIf you make a string via “string” then it is &str.\n\nString is type of “String”.\n\nString is a heap-allocated string. It is growable, mutable like vec and UTF-8 encoded.\n\n\n\n\nString -&gt; str\n    let s: String = \"abc\".to_string();\n    let ss: &str = &s;\n    println!(\"{}\", &ss); // → abc\n\n\nchar -&gt; String\n    let c: char = 'a';\n    let cs: String = c.to_string();\n    println!(\"{}\", &cs); // → a\n\n\nVec -&gt; String\n    let cs: Vec&lt;char&gt; = vec!['a', 'b', 'c'];\n    let s: String = cs.iter().collect();\n    println!(\"{}\", &s); // → abc\n\n\nString -&gt; Vec\n    let s: String = \"abc\".to_string();\n    let cs: Vec&lt;char&gt; = s.chars().collect();\n    println!(\"{:?}\", &cs); // → ['a', 'b', 'c']\n\n\n\nBinaryの話。\nfn main() {\n    let x = 13;\n\n    // bが2進数に変換という意味。020は0を20桁まで入れるという意味。\n    let s = format!(\"{:020b}\", x);\n\n    println!(\"{}\", s);\n}"
  },
  {
    "objectID": "posts/at_coder/typical90-02.html#問題点",
    "href": "posts/at_coder/typical90-02.html#問題点",
    "title": "typical90-02",
    "section": "問題点",
    "text": "問題点\n\nnext_permutation??\nユーザー解説の内容が理解できなかった。\nnext_permutationなんとかって言ってたけど、意味がわからんかった。"
  },
  {
    "objectID": "posts/ue5_aura_courses/section_02.html",
    "href": "posts/ue5_aura_courses/section_02.html",
    "title": "Section 02",
    "section": "",
    "text": "Sec 02 について"
  },
  {
    "objectID": "posts/ue5_aura_courses/section_02.html#流れ",
    "href": "posts/ue5_aura_courses/section_02.html#流れ",
    "title": "Section 02",
    "section": "流れ",
    "text": "流れ\n\nまずRiderで作業するのに集中するために、Auto CompileやLive Codingを消した。\nキャラクターの基本のセットアップ\n\nCreated Character Class\nCreated Weapon object and attached to mesh\nApplied Animation\n\nSetting up player enhanced input\n\nPrivate Dependency Module にEnhanced Inputを入れないといけない\n\nSetup GameModeBase and GameBase\n\nSetup PlayerController\nCasting input to enhanced input\nSetup Move function\n\nhighlight the enemy when mouse over\n\nby creating interface\nHighlighting via post process material\n\nadd post process volume and make it extens infinite\ncustom depth stencil : Enabled with Stencil\nadd PP_highlighing material to post process volume\nchange enemy actor’s custom depth"
  },
  {
    "objectID": "posts/ue5_aura_courses/section_02.html#発見",
    "href": "posts/ue5_aura_courses/section_02.html#発見",
    "title": "Section 02",
    "section": "発見",
    "text": "発見\n\nBindActionの第4引数に渡す関数ポインタの型をドキュメントで知りたい\nvoid AAuraPlayerController::SetupInputComponent()\n{\n    ...\n    EnhancedInputComponent-&gt;BindAction(MoveAction, ETriggerEvent::Triggered, this, &AAuraPlayerController::Move);\n}\n\nvoid AAuraPlayerController::Move(const FInputActionValue& Value) {...}\nBindActionの第4引数には、void (AAuraPlayerController::*)(const FInputActionValue&) という型の関数ポインタを渡す必要がある。これはどこを読めばわかるのか？\nBindActionのドキュメントによれば、上の関数の引数の形は\ntemplate&lt;class UserClass&gt;\nFInputActionBinding & BindAction\n(\n    const FName ActionName,\n    const EInputEvent KeyEvent,\n    UserClass * Object,\n    typename FInputActionHandlerWithKeySignature::TMethodPtr&lt; UserClass &gt; Func\n)\nで、この第四引数であるFEnhancedInputActionHandlerValueSignatureのドキュメントによれば、 typedef TBaseDelegate_OneParam&lt; void, const FInputActionValue & &gt; FEnhancedInputActionHandlerValueSignature\n\n\nRotation MatrixのGetUnitAxisの意味\nconst FVector2D InputAxisVector = Value.Get&lt;FVector2D&gt;();\nconst FRotator Rotation = GetControlRotation();\nconst FRotator YawRotation(0, Rotation.Yaw, 0);\n\nconst FVector ForwardDirection = FRotationMatrix(YawRotation).GetUnitAxis(EAxis::X);\nconst FVector RightDirection = FRotationMatrix(YawRotation).GetUnitAxis(EAxis::Y);\n\nif (APawn* ContrlledPawn = GetPawn&lt;APawn&gt;())\n{\n    ContrlledPawn-&gt;AddMovementInput(ForwardDirection, InputAxisVector.Y);\n    ContrlledPawn-&gt;AddMovementInput(RightDirection, InputAxisVector.X);\n}\nFRotationMatrix(YawRotation) は、YawRotationを回転行列に変換している。この回転行列は、YawRotationの回転軸をZ軸にしている。ここまではいいが、行列にする意味は何か？\nGetUnitAxis(EAxis::X) は、回転行列の1列目を取得していることになる。\n\\[\n\\begin{pmatrix}\n\\cos\\theta & -\\sin\\theta & 0 \\\\\n\\sin\\theta & \\cos\\theta & 0 \\\\\n0 & 0 & 1\n\\end{pmatrix}\n\\longmapsto\n\\begin{pmatrix}\n\\cos\\theta \\\\\n\\sin\\theta \\\\\n0\n\\end{pmatrix}\n,\n\\begin{pmatrix}\n-\\sin\\theta \\\\\n\\cos\\theta \\\\\n0\n\\end{pmatrix}\n,\n\\begin{pmatrix}\n0 \\\\\n0 \\\\\n1\n\\end{pmatrix}\n\\]\nこれについて考えれば、1,2,3列目のベクトルとは、回転後のベクトルの、向いている方向、その方向を \\(x'\\) 軸として作り上げる右手系 \\(x', y', z'\\) の基底ベクトルになっていることがわかる。\nGetControlRotation()でControl世界の回転を取得しているので、その世界の \\(x, y\\) 軸への方向に動きを制限して、Inputを適用している。\n\n\n仮想関数周り\nclass Parent{\npublic:\n    virtual void VFunc() { std::cout &lt;&lt; \"Parent\" &lt;&lt; std::endl; }\n    void NVFunc() { std::cout &lt;&lt; \"Parent\" &lt;&lt; std::endl; }\n};\n\nclass Child : public Parent{\npublic:\n    void VFunc() override { std::cout &lt;&lt; \"Child\" &lt;&lt; std::endl; }\n    void NVFunc() { std::cout &lt;&lt; \"Child\" &lt;&lt; std::endl; }\n};\n\nint main()\n{\n    Parent* p = new Child();\n    // Parentとしてpを定義しているので、virtualじゃない関数はParentのものが呼ばれる\n    p-&gt;VFunc(); // Child\n    // virtualな関数はChildのものが呼ばれる\n    p-&gt;NVFunc(); // Parent\n}\n以上がvirtualについての話で、sub classで書き換えられる前提の関数は次のように書く。\nclass Parent{\npublic:\n    virtual void VFunc() = 0;\n};\n\n\nTick関連の話\nPrimaryActorTick.bCanEverTick = true;\nこれをContructorで設定しないとTickしない。ただし、PlayerControllerはデフォルトでPlayerTickするようになっている。\n\n\nCollision Channelの話\nCharacter Collision PresetではECC_VisibilityがOffになってるんで気をつけて。"
  },
  {
    "objectID": "posts/ue5_aura_courses/section_02.html#問題点",
    "href": "posts/ue5_aura_courses/section_02.html#問題点",
    "title": "Section 02",
    "section": "問題点",
    "text": "問題点"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "UE5 Journal",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\ntypical90-03\n\n\n\n\n\n\n\nAtCoder\n\n\nProgramming\n\n\n\n\n\n\n\n\n\n\n\nOct 15, 2023\n\n\nSerika Yuzuki\n\n\n\n\n\n\n  \n\n\n\n\nsection_03\n\n\n\n\n\n\n\nUE5\n\n\nAura\n\n\nUdemy\n\n\nGame\n\n\nProgramming\n\n\n\n\n\n\n\n\n\n\n\nOct 15, 2023\n\n\nSerika Yuzuki\n\n\n\n\n\n\n  \n\n\n\n\n2023-10-14\n\n\n\n\n\n\n\nJournal\n\n\n2023\n\n\n\n\n\n\n\n\n\n\n\nOct 14, 2023\n\n\nSerika Yuzuki\n\n\n\n\n\n\n  \n\n\n\n\n数学I\n\n\n\n\n\n\n\nMath\n\n\n\n\n\n\n\n\n\n\n\nOct 14, 2023\n\n\nSerika Yuzuki\n\n\n\n\n\n\n  \n\n\n\n\n2023-10-12\n\n\n\n\n\n\n\nJournal\n\n\n2023\n\n\n\n\n\n\n\n\n\n\n\nOct 12, 2023\n\n\nSerika Yuzuki\n\n\n\n\n\n\n  \n\n\n\n\n2023-10-11\n\n\n\n\n\n\n\nJournal\n\n\n2023\n\n\n\n\n\n\n\n\n\n\n\nOct 11, 2023\n\n\nSerika Yuzuki\n\n\n\n\n\n\n  \n\n\n\n\n材料速度論\n\n\n\n\n\n\n\nUniversity\n\n\n2023\n\n\n\n\n\n\n\n\n\n\n\nOct 10, 2023\n\n\nSerika Yuzuki\n\n\n\n\n\n\n  \n\n\n\n\n材料量子力学\n\n\n\n\n\n\n\nUniversity\n\n\n2023\n\n\n\n\n\n\n\n\n\n\n\nOct 10, 2023\n\n\nSerika Yuzuki\n\n\n\n\n\n\n  \n\n\n\n\n材料相平衡論\n\n\n\n\n\n\n\nUniversity\n\n\n2023\n\n\n\n\n\n\n\n\n\n\n\nOct 10, 2023\n\n\nSerika Yuzuki\n\n\n\n\n\n\n  \n\n\n\n\n統計力学\n\n\n\n\n\n\n\nUniversity\n\n\n2023\n\n\n\n\n\n\n\n\n\n\n\nOct 10, 2023\n\n\nSerika Yuzuki\n\n\n\n\n\n\n  \n\n\n\n\n2023-10-10\n\n\n\n\n\n\n\nJournal\n\n\n2023\n\n\n\n\n\n\n\n\n\n\n\nOct 10, 2023\n\n\nSerika Yuzuki\n\n\n\n\n\n\n  \n\n\n\n\ntemplate\n\n\n\n\n\n\n\nJournal\n\n\n2023\n\n\n\n\n\n\n\n\n\n\n\nOct 9, 2023\n\n\nSerika Yuzuki\n\n\n\n\n\n\n  \n\n\n\n\ntemplate\n\n\n\n\n\n\n\nJournal\n\n\n2023\n\n\n\n\n\n\n\n\n\n\n\nOct 9, 2023\n\n\nSerika Yuzuki\n\n\n\n\n\n\n  \n\n\n\n\n2023-10-09\n\n\n\n\n\n\n\nJournal\n\n\n2023\n\n\n\n\n\n\n\n\n\n\n\nOct 9, 2023\n\n\nSerika Yuzuki\n\n\n\n\n\n\n  \n\n\n\n\nCargo Compete\n\n\n\n\n\n\n\nAtCoder\n\n\nProgramming\n\n\n\n\n\n\n\n\n\n\n\nOct 9, 2023\n\n\nSerika Yuzuki\n\n\n\n\n\n\n  \n\n\n\n\ntemplate\n\n\n\n\n\n\n\nAtCoder\n\n\nProgramming\n\n\n\n\n\n\n\n\n\n\n\nOct 9, 2023\n\n\nSerika Yuzuki\n\n\n\n\n\n\n  \n\n\n\n\ntypical90-02\n\n\n\n\n\n\n\nAtCoder\n\n\nProgramming\n\n\n\n\n\n\n\n\n\n\n\nOct 9, 2023\n\n\nSerika Yuzuki\n\n\n\n\n\n\n  \n\n\n\n\ntypical90-01\n\n\n\n\n\n\n\nAtCoder\n\n\nProgramming\n\n\n\n\n\n\n\n\n\n\n\nOct 9, 2023\n\n\nSerika Yuzuki\n\n\n\n\n\n\n  \n\n\n\n\nSection 02\n\n\n\n\n\n\n\nUE5\n\n\nAura\n\n\nUdemy\n\n\nGame\n\n\nProgramming\n\n\n\n\n\n\n\n\n\n\n\nOct 9, 2023\n\n\nSerika Yuzuki\n\n\n\n\n\n\n  \n\n\n\n\ntemplate\n\n\n\n\n\n\n\nUE5\n\n\nAura\n\n\nUdemy\n\n\nGame\n\n\nProgramming\n\n\n\n\n\n\n\n\n\n\n\nOct 9, 2023\n\n\nSerika Yuzuki\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "posts/収容所配布用/数学/数学I.html",
    "href": "posts/収容所配布用/数学/数学I.html",
    "title": "数学I",
    "section": "",
    "text": "次の \\(x\\) についての方程式の解を求めよ．ただし、 \\(0&lt;a&lt;\\frac{1}{4}\\) とする。\n\\[\nx^2 + 2ax + \\frac{1}{16} = -a + \\sqrt{a^2 + x - \\frac{1}{16}}\\;\n\\]"
  },
  {
    "objectID": "posts/収容所配布用/数学/数学I.html#section",
    "href": "posts/収容所配布用/数学/数学I.html#section",
    "title": "数学I",
    "section": "",
    "text": "次の \\(x\\) についての方程式の解を求めよ．ただし、 \\(0&lt;a&lt;\\frac{1}{4}\\) とする。\n\\[\nx^2 + 2ax + \\frac{1}{16} = -a + \\sqrt{a^2 + x - \\frac{1}{16}}\\;\n\\]"
  },
  {
    "objectID": "posts/journal/2023-10-14.html",
    "href": "posts/journal/2023-10-14.html",
    "title": "2023-10-14",
    "section": "",
    "text": "ダメみたいですね。\n\n\n\nリマインダーの確認\nジムに行く\n掃除をする\nゲームの進捗を産む\nAtCoderを進める\nお絵描きをする\n\n\n\n\n\nUEドキュメントを読み進める\nECサイトの作成を進める"
  },
  {
    "objectID": "posts/journal/2023-10-14.html#今日の予定の完成度",
    "href": "posts/journal/2023-10-14.html#今日の予定の完成度",
    "title": "2023-10-14",
    "section": "",
    "text": "ダメみたいですね。\n\n\n\nリマインダーの確認\nジムに行く\n掃除をする\nゲームの進捗を産む\nAtCoderを進める\nお絵描きをする\n\n\n\n\n\nUEドキュメントを読み進める\nECサイトの作成を進める"
  },
  {
    "objectID": "posts/journal/2023-10-14.html#日記",
    "href": "posts/journal/2023-10-14.html#日記",
    "title": "2023-10-14",
    "section": "日記",
    "text": "日記\n明日からはマジでしっかり時間を管理しないといけなさそうだ。マジで何もしてねえや。\n\nダイエット記録\n\n食べたもの\n\n\nジムでの消費カロリー\n\n\n体重\n\n\n\nその他"
  },
  {
    "objectID": "posts/journal/2023-10-14.html#明日の計画",
    "href": "posts/journal/2023-10-14.html#明日の計画",
    "title": "2023-10-14",
    "section": "明日の計画",
    "text": "明日の計画\n\n\n\n予定\n駒数\n備考\n時刻\n\n\n\n\nUE5\n8\n流石にSec3はある程度進める\n1400まで\n\n\nAtCoder\n4\n問題1個は進める\n1630まで\n\n\nお絵描き\n2\n長くやりすぎない\n1800まで\n\n\nジム\n2\n移動含めて２時間程度だろうけど、余裕を持とう\n2130まで\n\n\n掃除\n1\n25分だけでもいいからやろう\n2230まで"
  },
  {
    "objectID": "posts/at_coder/typical90-03.html",
    "href": "posts/at_coder/typical90-03.html",
    "title": "typical90-03",
    "section": "",
    "text": "DFSを使って解く問題。この問題は、グラフを与えられて、そのグラフの中で最も長い経路を求めれば、その端と端を結んでしまえば求めるサークルができる。\n何よりも苦戦したのは問題文をちゃんと読めてなかったこと。問題文をちゃんと読めていれば、もっと早く解けたはず。\nuse proconio::input;\n\nfn main() {\n    input! {\n        n: usize,\n        data: [[usize; 2]; n-1],\n    }\n    \n    let mut graph = vec![vec![]; n];\n\n    for datum in data {\n        graph[datum[0]-1].push(datum[1]-1);\n        graph[datum[1]-1].push(datum[0]-1);\n    }\n\n    let dist_from_0 = solve(graph.clone(), 0);\n    \n    let max_index = dist_from_0.iter().enumerate().max_by_key(|x| x.1).unwrap().0;\n    \n    let dist_from_max = solve(graph.clone(), max_index);\n    \n    println!(\"{}\", dist_from_max.iter().max().unwrap() + 1);\n}\n\nfn solve(graph: Vec&lt;Vec&lt;usize&gt;&gt;,start: usize) -&gt; Vec&lt;isize&gt;{    \n    let mut stack = vec![(start, 0)];\n    let mut dist = vec![-1; graph.len()];\n    dist[start] = 0;\n    \n    while let Some((node, depth)) = stack.pop() {\n        for &next in &graph[node] {\n            if dist[next] != -1 {\n                continue;\n            }\n            dist[next] = depth + 1;\n            stack.push((next, depth + 1));\n        }\n    }\n    \n    return dist;\n}"
  },
  {
    "objectID": "posts/at_coder/typical90-03.html#概要",
    "href": "posts/at_coder/typical90-03.html#概要",
    "title": "typical90-03",
    "section": "",
    "text": "DFSを使って解く問題。この問題は、グラフを与えられて、そのグラフの中で最も長い経路を求めれば、その端と端を結んでしまえば求めるサークルができる。\n何よりも苦戦したのは問題文をちゃんと読めてなかったこと。問題文をちゃんと読めていれば、もっと早く解けたはず。\nuse proconio::input;\n\nfn main() {\n    input! {\n        n: usize,\n        data: [[usize; 2]; n-1],\n    }\n    \n    let mut graph = vec![vec![]; n];\n\n    for datum in data {\n        graph[datum[0]-1].push(datum[1]-1);\n        graph[datum[1]-1].push(datum[0]-1);\n    }\n\n    let dist_from_0 = solve(graph.clone(), 0);\n    \n    let max_index = dist_from_0.iter().enumerate().max_by_key(|x| x.1).unwrap().0;\n    \n    let dist_from_max = solve(graph.clone(), max_index);\n    \n    println!(\"{}\", dist_from_max.iter().max().unwrap() + 1);\n}\n\nfn solve(graph: Vec&lt;Vec&lt;usize&gt;&gt;,start: usize) -&gt; Vec&lt;isize&gt;{    \n    let mut stack = vec![(start, 0)];\n    let mut dist = vec![-1; graph.len()];\n    dist[start] = 0;\n    \n    while let Some((node, depth)) = stack.pop() {\n        for &next in &graph[node] {\n            if dist[next] != -1 {\n                continue;\n            }\n            dist[next] = depth + 1;\n            stack.push((next, depth + 1));\n        }\n    }\n    \n    return dist;\n}"
  },
  {
    "objectID": "posts/at_coder/typical90-03.html#発見",
    "href": "posts/at_coder/typical90-03.html#発見",
    "title": "typical90-03",
    "section": "発見",
    "text": "発見\n\n複数のループをするときに使う\n// Iterate over the coordinates of a 4 x 4 x 4 grid\n// from (0, 0, 0), (0, 0, 1), .., (0, 1, 0), (0, 1, 1), .. etc until (3, 3, 3)\nfor (i, j, k) in iproduct!(0..4, 0..4, 0..4) {\n   // ..\n}\n\n\nDFSのコードの書き方\nグラフをとりあえず\nVec&lt;Vec&lt;usize&gt;&gt;\nで表現する。\n次に、探索の仕方として、stackを用意して、そこに今現時点の(Node,Depth)を入れておく。そして、stackが空になるまで、stackからtupleを抜き取って行って、次のNodeを探索していく。つまり、stackはいわばNodeにDepthのステッカーを貼っているようなものであり、次に進めれば剥がすということを繰り返している。\n最終的に剥がすことができなかったtupleだけがstuckに積み重なっていくわけである。"
  },
  {
    "objectID": "posts/at_coder/typical90-03.html#問題点",
    "href": "posts/at_coder/typical90-03.html#問題点",
    "title": "typical90-03",
    "section": "問題点",
    "text": "問題点"
  },
  {
    "objectID": "posts/journal/2023-10-15.html",
    "href": "posts/journal/2023-10-15.html",
    "title": "template",
    "section": "",
    "text": "リマインダーの確認\nジムに行く\n掃除をする\nゲームの進捗を産む\nAtCoderを進める\nお絵描きをする\n\n\n\n\n\nUEドキュメントを読み進める\nECサイトの作成を進める"
  },
  {
    "objectID": "posts/journal/2023-10-15.html#今日の予定の完成度",
    "href": "posts/journal/2023-10-15.html#今日の予定の完成度",
    "title": "template",
    "section": "",
    "text": "リマインダーの確認\nジムに行く\n掃除をする\nゲームの進捗を産む\nAtCoderを進める\nお絵描きをする\n\n\n\n\n\nUEドキュメントを読み進める\nECサイトの作成を進める"
  },
  {
    "objectID": "posts/journal/2023-10-15.html#今日の計画",
    "href": "posts/journal/2023-10-15.html#今日の計画",
    "title": "template",
    "section": "今日の計画",
    "text": "今日の計画\n\n\n\nPLAN\nUNIT\nEXTRA\nTIME\n\n\n\n\nUE5\n4\nSec3\n14:00\n\n\nAtCoder\n0\nAt least 1 problem\n16:30\n\n\nDrawing\n0\nDo not do too much\n18:00\n\n\nGym\n0\nFirst Priority\n21:30\n\n\nCleaning\n0\nDo at least 25 minutes\n22:30"
  },
  {
    "objectID": "posts/journal/2023-10-15.html#明日の計画",
    "href": "posts/journal/2023-10-15.html#明日の計画",
    "title": "template",
    "section": "明日の計画",
    "text": "明日の計画\n\n\n\nPLAN\nUNIT\nEXTRA\nTIME\n\n\n\n\nUE5\n4\nSec3\n14:00\n\n\nAtCoder\n4\nAt least 1 problem\n16:30\n\n\nDrawing\n2\nDo not do too much\n18:00\n\n\nGym\n2\nFirst Priority\n21:30\n\n\nCleaning\n1\nDo at least 25 minutes\n22:30"
  },
  {
    "objectID": "posts/journal/2023-10-15.html#日記",
    "href": "posts/journal/2023-10-15.html#日記",
    "title": "template",
    "section": "日記",
    "text": "日記\n\nダイエット記録\n\n食べたもの\n\n\nジムでの消費カロリー\n\n\n体重\n\n\n\nその他"
  },
  {
    "objectID": "posts/journal/template.html#今日の計画",
    "href": "posts/journal/template.html#今日の計画",
    "title": "template",
    "section": "今日の計画",
    "text": "今日の計画\n\n\n\nPLAN\nUNIT\nEXTRA\nTIME\n\n\n\n\nUE5\n0\n\n14:00\n\n\nAtCoder\n0\n\n16:30\n\n\nDrawing\n0\n\n18:00\n\n\nGym\n0\nThis is in the first priority\n21:30\n\n\nCleaning\n0\n\n22:30"
  },
  {
    "objectID": "posts/journal/template.html#明日の計画",
    "href": "posts/journal/template.html#明日の計画",
    "title": "template",
    "section": "明日の計画",
    "text": "明日の計画\n\n\n\nPLAN\nUNIT\nEXTRA\nTIME\n\n\n\n\nUE5\n8\n\n14:00\n\n\nAtCoder\n4\n\n16:30\n\n\nDrawing\n2\n\n18:00\n\n\nGym\n2\nThis is in the first priority\n21:30\n\n\nCleaning\n1\n\n22:30"
  },
  {
    "objectID": "posts/ue5_aura_courses/section_03.html",
    "href": "posts/ue5_aura_courses/section_03.html",
    "title": "section_03",
    "section": "",
    "text": "Sec 03 について"
  },
  {
    "objectID": "posts/ue5_aura_courses/section_03.html#概要",
    "href": "posts/ue5_aura_courses/section_03.html#概要",
    "title": "section_03",
    "section": "概要",
    "text": "概要\n\nWhat is Gameplay Ability System: GAS?\n\nBuilt for Paragon but cancelled\nBest for RPGs\n\nAttach Ability System to Characters\n\nIt is possible to attach systems to Actor or Actor assosiated Class\n\nIn this course, we will attach to both for studying"
  },
  {
    "objectID": "posts/ue5_aura_courses/section_03.html#発見",
    "href": "posts/ue5_aura_courses/section_03.html#発見",
    "title": "section_03",
    "section": "発見",
    "text": "発見\n\nC++のディレクトリ構成を変更する際\n\nマジで面倒なので出来ればやらないこと。\nBinaryとIntermediateは消して、直接ディレクトリを編集する\nビルドしなおす。ただRiderでエディタを開いてもコンパイルエラーが出る\nEpic Game Launcherから直接開く\nRefresh Rider Projectを実行する"
  },
  {
    "objectID": "posts/ue5_aura_courses/section_03.html#問題点",
    "href": "posts/ue5_aura_courses/section_03.html#問題点",
    "title": "section_03",
    "section": "問題点",
    "text": "問題点"
  }
]